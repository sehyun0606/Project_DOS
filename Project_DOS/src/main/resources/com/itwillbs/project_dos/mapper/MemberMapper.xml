<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.project_dos.mapper.MemberMapper">
	
	<insert id="insertMember">
		INSERT
		INTO member
		VALUES(
			null
			, #{member_id}
			, #{member_passwd}
			, #{member_name}
			, #{member_phone}
			, #{member_email}
			, 'N'
			, #{member_birth}
			, NOW()
			, null
			, 1
			, null
			, #{member_address1}
			, #{member_address2}
			, #{member_post_code}
		)
	</insert>

	<select id="selectMember" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{member_id}
	</select>

	<select id="findIdMember" resultType="member">
		SELECT member_id
		FROM member
		WHERE member_name = #{member_name} AND member_phone = #{member_phone}
	</select>

	<select id="findPasswdMember" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{member_id} AND member_name = #{member_name} AND member_phone = #{member_phone}
	</select>

	<select id="selectMailAuthInfo" resultType="mailAuthInfo">
		SELECT *
		FROM mailAuthInfo
		WHERE email = #{email}
	</select>

	<!-- 신규 인증 정보(email, auth_code) 등록 - INSERT -->
	<insert id="insertMailAuthInfo">
		INSERT
		INTO mailAuthInfo
		VALUES (
			#{email}
			, #{auth_code}
		)
	</insert>

	<!-- 기존 인증 정보 수정 - UPDATE -->
	<!-- email 이 일치하는 레코드의 auth_code 컬럼값(인증코드) 변경 -->
	<update id="updateMailAuthInfo">
		UPDATE mailAuthInfo
		SET auth_code = #{auth_code}
		WHERE email = #{email}
	</update>
 
 	<select id="selectMemberEmail" resultType="member">
		SELECT member_email
		FROM member
		WHERE member_email = #{email}
	</select>
	
	<select id="selectAuthCode" resultType="string">
		SELECT auth_code
		FROM mailAuthInfo
		WHERE email = #{email}
	</select>
	
	<select id="getMailAuthInfo" resultType="string">
		SELECT auth_code
		FROM mailAuthInfo
		WHERE email = #{member_email}
	</select>

	<select id="selectMemberId" resultType="member" >
		SELECT member_id
		FROM member
		WHERE member_email = #{member_email}
	</select>

	<update id="modifyPasswd">
		UPDATE member
		SET member_passwd = #{newPasswd}
		WHERE member_email = #{member_email}
	</update>

	<select id="getIdCheck" resultType="string">
		SELECT member_id
		FROM member
		WHERE member_id = #{id}
	</select>

	<update id="updateMemberAuth">
		UPDATE member
		SET member_email_auth = 'Y'
		WHERE member_email = #{member_email}
	</update>

	<select id="selectPaymentMember" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{id}
	</select>
	
	<insert id="insertPaymentMember">
		INSERT
		INTO purchase_history
		VALUES(
			#{merchant_uid}
			, #{buyer_name}
			, #{buyer_tel}
			, #{name}
			, #{amount}
			, #{pay_method}
			, NOW()
		)
	</insert>
	
	<select id="selectMembership" resultType="string">
		SELECT product_name
		FROM purchase_history
		WHERE member_id = #{id}
	</select>
	
	<update id="updateMember">
		UPDATE member
		SET
			<if test="!passwd.equals('')">
				member_passwd = #{passwd},  -- 조건에 따라 실행 여부가 달라지는 부분(패스워드가 존재할 경우에만 추가됨)
			</if>
			member_name = #{member_name},
			member_phone = #{member_phone},
			member_email = #{member_email},
			member_birth = #{member_birth},
			member_post_code = #{member_post_code},
			member_address1 = #{member_address1},
			member_address2 = #{member_address2}
		WHERE member_id = #{member_id}
	</update>

<!-- 	<delete id="memberLogDelete"> -->
<!-- 		DELETE p, q, r -->
<!-- 		FROM purchase_history p JOIN question_board q -->
<!-- 		ON p.member_id = q.member_id -->
<!-- 		JOIN reservation r ON q.member_id = r.member_id -->
<!-- 		WHERE p.member_id = #{id}  -->
<!-- 	</delete> -->
	
	<delete id="deleteNotice">
		<if test="id.equals('admin')">
			DELETE
			FROM notice_board
			WHERE member_id = #{id}
		</if>
	</delete>
	
	<delete id="deleteMember">
		DELETE 
		FROM member
		WHERE member_id = #{id}
	</delete>

	<delete id="deleteQuestion">
		DELETE 
		FROM question_board
		WHERE member_id = #{id}
	</delete>

	<delete id="deleteReservation">
		DELETE 
		FROM reservation
		WHERE member_id = #{id}
	</delete>

	<delete id="deletePurchase">
		DELETE 
		FROM purchase_history
		WHERE member_id = #{id}
	</delete>

	<delete id="deleteReveiw">
		DELETE 
		FROM review
		WHERE member_id = #{id}
	</delete>
	
	<update id="updateMembership">
		UPDATE member
		SET membership = 'white'
		WHERE member_phone = #{buyer_tel}
	</update>






</mapper>
